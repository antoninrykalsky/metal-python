# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal_python
from metal_python.models.plan import Plan  # noqa: E501
from metal_python.rest import ApiException

class TestPlan(unittest.TestCase):
    """Plan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Plan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Plan`
        """
        model = metal_python.models.plan.Plan()  # noqa: E501
        if include_optional :
            return Plan(
                available_in = [
                    metal_python.models.plan_available_in_inner.Plan_available_in_inner(
                        href = '', 
                        price = metal_python.models.plan_available_in_inner_price.Plan_available_in_inner_price(
                            hour = 1.23, 
                            href = '', ), )
                    ], 
                available_in_metros = [
                    metal_python.models.plan_available_in_metros_inner.Plan_available_in_metros_inner(
                        href = '', 
                        price = metal_python.models.plan_available_in_inner_price.Plan_available_in_inner_price(
                            hour = 1.23, 
                            href = '', ), )
                    ], 
                var_class = 'm3.large.x86', 
                description = '', 
                deployment_types = [
                    'on_demand'
                    ], 
                id = '', 
                legacy = True, 
                line = 'baremetal', 
                name = '', 
                pricing = metal_python.models.pricing.pricing(), 
                slug = 'm3.large.x86', 
                specs = metal_python.models.plan_specs.Plan_specs(
                    cpus = [
                        metal_python.models.plan_specs_cpus_inner.Plan_specs_cpus_inner(
                            count = 56, 
                            type = '', 
                            href = '', )
                        ], 
                    drives = [
                        metal_python.models.plan_specs_drives_inner.Plan_specs_drives_inner(
                            count = 56, 
                            type = 'HDD', 
                            size = '3.84TB', 
                            category = 'boot', 
                            href = '', )
                        ], 
                    nics = [
                        metal_python.models.plan_specs_nics_inner.Plan_specs_nics_inner(
                            count = 2, 
                            type = '1Gbps', 
                            href = '', )
                        ], 
                    features = metal_python.models.plan_specs_features.Plan_specs_features(
                        raid = True, 
                        txt = True, 
                        uefi = True, 
                        href = '', ), 
                    href = '', ), 
                type = 'standard', 
                href = ''
            )
        else :
            return Plan(
        )
        """

    def testPlan(self):
        """Test Plan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
