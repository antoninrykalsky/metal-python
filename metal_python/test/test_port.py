# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal_python
from metal_python.models.port import Port  # noqa: E501
from metal_python.rest import ApiException

class TestPort(unittest.TestCase):
    """Port unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Port
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Port`
        """
        model = metal_python.models.port.Port()  # noqa: E501
        if include_optional :
            return Port(
                bond = metal_python.models.bond_port_data.BondPortData(
                    id = '', 
                    name = '', 
                    href = '', ), 
                data = metal_python.models.port_data.PortData(
                    mac = '', 
                    bonded = True, 
                    href = '', ), 
                disbond_operation_supported = True, 
                href = '', 
                id = '', 
                name = 'bond0', 
                type = 'NetworkPort', 
                network_type = 'layer2-bonded', 
                native_virtual_network = metal_python.models.virtual_network.VirtualNetwork(
                    assigned_to = metal_python.models.href.Href(
                        href = '', ), 
                    assigned_to_virtual_circuit = True, 
                    description = '', 
                    facility = metal_python.models.href.Href(
                        href = '', ), 
                    href = '', 
                    id = '', 
                    instances = [
                        
                        ], 
                    metal_gateways = [
                        metal_python.models.metal_gateway_lite.MetalGatewayLite(
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            gateway_address = '10.1.2.1/27', 
                            href = '', 
                            id = '', 
                            state = 'ready', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            vlan = 1001, )
                        ], 
                    metro = , 
                    metro_code = '', 
                    vxlan = 56, ), 
                virtual_networks = [
                    metal_python.models.href.Href(
                        href = '', )
                    ]
            )
        else :
            return Port(
        )
        """

    def testPort(self):
        """Test Port"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
