# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal_python
from metal_python.models.project import Project  # noqa: E501
from metal_python.rest import ApiException

class TestProject(unittest.TestCase):
    """Project unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Project
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Project`
        """
        model = metal_python.models.project.Project()  # noqa: E501
        if include_optional :
            return Project(
                bgp_config = metal_python.models.href.Href(
                    href = '', ), 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                customdata = metal_python.models.customdata.customdata(), 
                devices = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                id = '', 
                invitations = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                max_devices = metal_python.models.max_devices.max_devices(), 
                members = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                memberships = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                name = '', 
                network_status = metal_python.models.network_status.network_status(), 
                payment_method = metal_python.models.href.Href(
                    href = '', ), 
                ssh_keys = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                volumes = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                organization = metal_python.models.href.Href(
                    href = '', ), 
                href = '', 
                backend_transfer_enabled = True
            )
        else :
            return Project(
        )
        """

    def testProject(self):
        """Test Project"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
