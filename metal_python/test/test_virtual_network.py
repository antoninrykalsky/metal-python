# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import metal_python
from metal_python.models.virtual_network import VirtualNetwork  # noqa: E501
from metal_python.rest import ApiException

class TestVirtualNetwork(unittest.TestCase):
    """VirtualNetwork unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VirtualNetwork
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualNetwork`
        """
        model = metal_python.models.virtual_network.VirtualNetwork()  # noqa: E501
        if include_optional :
            return VirtualNetwork(
                assigned_to = metal_python.models.href.Href(
                    href = '', ), 
                assigned_to_virtual_circuit = True, 
                description = '', 
                facility = metal_python.models.href.Href(
                    href = '', ), 
                href = '', 
                id = '', 
                instances = [
                    metal_python.models.href.Href(
                        href = '', )
                    ], 
                metal_gateways = [
                    metal_python.models.metal_gateway_lite.MetalGatewayLite(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        gateway_address = '10.1.2.1/27', 
                        href = '', 
                        id = '', 
                        state = 'ready', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        vlan = 1001, )
                    ], 
                metro = metal_python.models.href.Href(
                    href = '', ), 
                metro_code = '', 
                vxlan = 56
            )
        else :
            return VirtualNetwork(
        )
        """

    def testVirtualNetwork(self):
        """Test VirtualNetwork"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
